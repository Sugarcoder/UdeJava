[] = dealing with an array 

Ex. int[] myIntArray;
myIntArray = new int[10];

OR  int[] myIntArray = new int[10];



Short Cut (if you already know how many numbers):


int[] myIntArray =  { 1,2,3,4,5,6,7,8,9,10 };



- When you run the program, it will print out the position of the array number that you want.


- You can use a 'for loop' to initialize an array.

Ex:

for(int i=0; i<10; i++) {
	myIntArray[i] = i*10;
}

- If you use .length, Java tells you what the length of that array is. 

Ex: 

for(int i=0; i < myIntArray.length; i++) {
	System.out.println("Element " + i + " value is " + myIntArray[i]);
}




- you can pass array into methods as well.

Ex: 
public static void main(String[] args) {
	int[] myIntArray = new int[25];

	for(int i=0; i<myIntArray.length; i++) {
		myIntArray[i] = i*10;
	}

printArray(myIntArray);

}


public static void printArray(int[] array) {
	for(int i=0; i<array.length; i++) {
		System.out.println(array[i]);
	}
}



- System.in = lets you type input into the console, and gets returned back to the program


Real-life Example of an array:

public class Main {
	private static Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {
		int[] myIntegers = getIntegers(5);

		for(int i=0; i < myIntegers.length; i++) {
			System.out.println("Element " + i + "typed value was " + myIntegers[i]);
		}

		System.out.println("The average is " + getAverage(myIntegers));

	}

	public static int[] getIntegers(int number) {
		System.out.println("Enter " + number + " integer values.\r");     
		int[] values = new int[number];

		for(int i=0; i < values.length; i++) {
			values[i] = scanner.nextInt();
		}

		return values;

	}


	public static double getAverage(int[] array) {
		int sum = 0;

		for(int i=0; i < array.length;i++) {
			sum += array[i];
		}

		return (double) sum / (double) array.length;
	}
}


